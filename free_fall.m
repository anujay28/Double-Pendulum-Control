function fvalue = ode_motion(t,y)
        m1 = 1; m2=1; l1=1; l2=1 ; r1=0.45; r2=0.45; i1=0.084 ; i2 = 0.084 ; g = 9.81;

        fvalue = zeros(4,1);
        
        %State Space Represenatation
        theta_1 = y(1);
        theta_2 = y(2);
        theta_1dot = y(3);
        theta_2dot = y(4);
        
        theta_1ddot = (g*i2*l1*m2*sin(theta_1) + g*i2*m1*r1*sin(theta_1) - l1*m2^2*r2^3*theta_1dot^2*cos(theta_1 + theta_2)^3*sin(theta_1) + l1*m2^2*r2^3*theta_1dot^2*sin(theta_1 + theta_2)^3*cos(theta_1) - l1*m2^2*r2^3*theta_2dot^2*cos(theta_1 + theta_2)^3*sin(theta_1) + l1*m2^2*r2^3*theta_2dot^2*sin(theta_1 + theta_2)^3*cos(theta_1) + g*l1*m2^2*r2^2*cos(theta_1 + theta_2)^2*sin(theta_1) - g*l1*m2^2*r2^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1) + l1^2*m2^2*r2^2*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)^2 - 2*l1*m2^2*r2^3*theta_1dot*theta_2dot*cos(theta_1 + theta_2)^3*sin(theta_1) + 2*l1*m2^2*r2^3*theta_1dot*theta_2dot*sin(theta_1 + theta_2)^3*cos(theta_1) - l1^2*m2^2*r2^2*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*sin(theta_1)^2 - l1^2*m2^2*r2^2*theta_1dot^2*cos(theta_1 + theta_2)^2*cos(theta_1)*sin(theta_1) + l1^2*m2^2*r2^2*theta_1dot^2*sin(theta_1 + theta_2)^2*cos(theta_1)*sin(theta_1) - i2*l1*m2*r2*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1) + i2*l1*m2*r2*theta_1dot^2*sin(theta_1 + theta_2)*cos(theta_1) - i2*l1*m2*r2*theta_2dot^2*cos(theta_1 + theta_2)*sin(theta_1) + i2*l1*m2*r2*theta_2dot^2*sin(theta_1 + theta_2)*cos(theta_1) + g*m1*m2*r1*r2^2*cos(theta_1 + theta_2)^2*sin(theta_1) + l1*m2^2*r2^3*theta_1dot^2*cos(theta_1 + theta_2)^2*sin(theta_1 + theta_2)*cos(theta_1) + l1*m2^2*r2^3*theta_2dot^2*cos(theta_1 + theta_2)^2*sin(theta_1 + theta_2)*cos(theta_1) + g*m1*m2*r1*r2^2*sin(theta_1 + theta_2)^2*sin(theta_1) - l1*m2^2*r2^3*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)^2*sin(theta_1) - l1*m2^2*r2^3*theta_2dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)^2*sin(theta_1) - 2*l1*m2^2*r2^3*theta_1dot*theta_2dot*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)^2*sin(theta_1) - 2*i2*l1*m2*r2*theta_1dot*theta_2dot*cos(theta_1 + theta_2)*sin(theta_1) + 2*i2*l1*m2*r2*theta_1dot*theta_2dot*sin(theta_1 + theta_2)*cos(theta_1) + 2*l1*m2^2*r2^3*theta_1dot*theta_2dot*cos(theta_1 + theta_2)^2*sin(theta_1 + theta_2)*cos(theta_1))/(i1*i2 + i1*m2*r2^2*cos(theta_1 + theta_2)^2 + i1*m2*r2^2*sin(theta_1 + theta_2)^2 + i2*l1^2*m2*cos(theta_1)^2 + i2*m1*r1^2*cos(theta_1)^2 + i2*l1^2*m2*sin(theta_1)^2 + i2*m1*r1^2*sin(theta_1)^2 + l1^2*m2^2*r2^2*cos(theta_1 + theta_2)^2*sin(theta_1)^2 + l1^2*m2^2*r2^2*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + m1*m2*r1^2*r2^2*cos(theta_1 + theta_2)^2*cos(theta_1)^2 + m1*m2*r1^2*r2^2*cos(theta_1 + theta_2)^2*sin(theta_1)^2 + m1*m2*r1^2*r2^2*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + m1*m2*r1^2*r2^2*sin(theta_1 + theta_2)^2*sin(theta_1)^2 - 2*l1^2*m2^2*r2^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1));
        
        theta_2ddot = -(g*i2*l1*m2*sin(theta_1) - g*i1*m2*r2*sin(theta_1 + theta_2) + g*i2*m1*r1*sin(theta_1) - l1*m2^2*r2^3*theta_1dot^2*cos(theta_1 + theta_2)^3*sin(theta_1) + l1*m2^2*r2^3*theta_1dot^2*sin(theta_1 + theta_2)^3*cos(theta_1) - l1^3*m2^2*r2*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1)^3 + l1^3*m2^2*r2*theta_1dot^2*sin(theta_1 + theta_2)*cos(theta_1)^3 - l1*m2^2*r2^3*theta_2dot^2*cos(theta_1 + theta_2)^3*sin(theta_1) + l1*m2^2*r2^3*theta_2dot^2*sin(theta_1 + theta_2)^3*cos(theta_1) + g*l1*m2^2*r2^2*cos(theta_1 + theta_2)^2*sin(theta_1) - g*l1^2*m2^2*r2*sin(theta_1 + theta_2)*cos(theta_1)^2 - l1^3*m2^2*r2*theta_1dot^2*cos(theta_1 + theta_2)*cos(theta_1)^2*sin(theta_1) - g*l1*m2^2*r2^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1) + l1^3*m2^2*r2*theta_1dot^2*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1)^2 + 2*l1^2*m2^2*r2^2*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)^2 + l1^2*m2^2*r2^2*theta_2dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)^2 + g*l1^2*m2^2*r2*cos(theta_1 + theta_2)*cos(theta_1)*sin(theta_1) - 2*l1*m2^2*r2^3*theta_1dot*theta_2dot*cos(theta_1 + theta_2)^3*sin(theta_1) + 2*l1*m2^2*r2^3*theta_1dot*theta_2dot*sin(theta_1 + theta_2)^3*cos(theta_1) - 2*l1^2*m2^2*r2^2*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*sin(theta_1)^2 - l1^2*m2^2*r2^2*theta_2dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*sin(theta_1)^2 - 2*l1^2*m2^2*r2^2*theta_1dot^2*cos(theta_1 + theta_2)^2*cos(theta_1)*sin(theta_1) - l1^2*m2^2*r2^2*theta_2dot^2*cos(theta_1 + theta_2)^2*cos(theta_1)*sin(theta_1) + 2*l1^2*m2^2*r2^2*theta_1dot^2*sin(theta_1 + theta_2)^2*cos(theta_1)*sin(theta_1) + l1^2*m2^2*r2^2*theta_2dot^2*sin(theta_1 + theta_2)^2*cos(theta_1)*sin(theta_1) - i1*l1*m2*r2*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1) + i1*l1*m2*r2*theta_1dot^2*sin(theta_1 + theta_2)*cos(theta_1) - i2*l1*m2*r2*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1) + i2*l1*m2*r2*theta_1dot^2*sin(theta_1 + theta_2)*cos(theta_1) - i2*l1*m2*r2*theta_2dot^2*cos(theta_1 + theta_2)*sin(theta_1) + i2*l1*m2*r2*theta_2dot^2*sin(theta_1 + theta_2)*cos(theta_1) + g*m1*m2*r1*r2^2*cos(theta_1 + theta_2)^2*sin(theta_1) - g*m1*m2*r1^2*r2*sin(theta_1 + theta_2)*cos(theta_1)^2 + l1*m2^2*r2^3*theta_1dot^2*cos(theta_1 + theta_2)^2*sin(theta_1 + theta_2)*cos(theta_1) + l1*m2^2*r2^3*theta_2dot^2*cos(theta_1 + theta_2)^2*sin(theta_1 + theta_2)*cos(theta_1) + g*m1*m2*r1*r2^2*sin(theta_1 + theta_2)^2*sin(theta_1) - g*m1*m2*r1^2*r2*sin(theta_1 + theta_2)*sin(theta_1)^2 - l1*m2^2*r2^3*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)^2*sin(theta_1) - l1*m2^2*r2^3*theta_2dot^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)^2*sin(theta_1) - 2*l1*m2^2*r2^3*theta_1dot*theta_2dot*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)^2*sin(theta_1) + 2*l1^2*m2^2*r2^2*theta_1dot*theta_2dot*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)^2 - 2*l1^2*m2^2*r2^2*theta_1dot*theta_2dot*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*sin(theta_1)^2 - 2*l1^2*m2^2*r2^2*theta_1dot*theta_2dot*cos(theta_1 + theta_2)^2*cos(theta_1)*sin(theta_1) + 2*l1^2*m2^2*r2^2*theta_1dot*theta_2dot*sin(theta_1 + theta_2)^2*cos(theta_1)*sin(theta_1) - 2*i2*l1*m2*r2*theta_1dot*theta_2dot*cos(theta_1 + theta_2)*sin(theta_1) + 2*i2*l1*m2*r2*theta_1dot*theta_2dot*sin(theta_1 + theta_2)*cos(theta_1) - l1*m1*m2*r1^2*r2*theta_1dot^2*cos(theta_1 + theta_2)*sin(theta_1)^3 + l1*m1*m2*r1^2*r2*theta_1dot^2*sin(theta_1 + theta_2)*cos(theta_1)^3 + 2*l1*m2^2*r2^3*theta_1dot*theta_2dot*cos(theta_1 + theta_2)^2*sin(theta_1 + theta_2)*cos(theta_1) + g*l1*m1*m2*r1*r2*sin(theta_1 + theta_2)*sin(theta_1)^2 + g*l1*m1*m2*r1*r2*cos(theta_1 + theta_2)*cos(theta_1)*sin(theta_1) - l1*m1*m2*r1^2*r2*theta_1dot^2*cos(theta_1 + theta_2)*cos(theta_1)^2*sin(theta_1) + l1*m1*m2*r1^2*r2*theta_1dot^2*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1)^2)/(i1*i2 + i1*m2*r2^2*cos(theta_1 + theta_2)^2 + i1*m2*r2^2*sin(theta_1 + theta_2)^2 + i2*l1^2*m2*cos(theta_1)^2 + i2*m1*r1^2*cos(theta_1)^2 + i2*l1^2*m2*sin(theta_1)^2 + i2*m1*r1^2*sin(theta_1)^2 + l1^2*m2^2*r2^2*cos(theta_1 + theta_2)^2*sin(theta_1)^2 + l1^2*m2^2*r2^2*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + m1*m2*r1^2*r2^2*cos(theta_1 + theta_2)^2*cos(theta_1)^2 + m1*m2*r1^2*r2^2*cos(theta_1 + theta_2)^2*sin(theta_1)^2 + m1*m2*r1^2*r2^2*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + m1*m2*r1^2*r2^2*sin(theta_1 + theta_2)^2*sin(theta_1)^2 - 2*l1^2*m2^2*r2^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1));
       
        
        if abs(theta_1)>2*pi
            theta_1 = mod(theta_1 , 2*pi);
        end        
        if abs(theta_2)>2*pi
            theta_2 = mod(theta_2 , 2*pi);
        end        
        %Representation in terms for first order function
        fvalue(1)  = theta_1dot;
        fvalue(2)  = theta_2dot;
        fvalue(3)  = theta_1ddot;
        fvalue(4)  = theta_2ddot;
end